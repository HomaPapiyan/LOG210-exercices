@startuml CU26-mdd 
class "Coordonnateur" as C {

}
class "<<Service>>\nVisiteSupervise " as VS 
class "<<Lieu>>\nPointService " as PS 
class "<<Abstract>>\n<<Planification>>\nHoraire" as H 
class "PlageHoraire" as PH {
    dateDebut:DateTime 
    dateFin:DateTime
}
class "<<Sercice a offrir>>\nVisiteARealiser" as VR 
class "<<Role>>\nEmploye" as E 
class "<<Lieu>>\nLocal" as L 
class "<<Role>>\nParent" as P 
class "<<Role>>\nVisiteur" as V 
class "<<Role>>\nEnfant" as CH
class "<<Role>>\n<<Abstract>>\nClient" as CL

PS "1" -- "*" VR: doit offrir des services aux 
PS "1" -- "*" E: emploie >
PS  "1" -- "*" L: possède >

C "*" -l- "1" PS: travaille >

VR "1" -- "2..*" CL: est pour >

'VR "1" -- "*" V: est pour
'VR "1" -- "*" CH: est pour
VS "*" -- "1" PH: sont fait durant >

'VS "*" -- "2..*" CL: offre un service a >

VS "*" -- "1" VR: a lien durant <
VS "*" -- "1" E: est supervisé par >
VS "*" -- "1" L: se déroule dans >
CH "1" -- "*" P : est l'enfant de >

'VS "*" -d- "1..*" V: offre un service aux
'VS "*" -d- "1..*" CH: est pour
C "1" -- "*" VS: organise >


H "1" -u- "*" PH: Permet d'obtenir\nun service selon >

CL  -u-|>  H
E  -u-|>  H
L  -u-|>  H

CH -u-|> CL
P -u-|> CL
V -u-|> CL

@enduml



@startuml DSS-CU26
title Proposer les horaires
skinparam style strictuml
participant ":Coordonnateur" as C 
participant ":Systeme" as S 

C -> S: demarrerPropositionHoraire()
C <<-- S: [employe:integer,local:integer, DateDebut:string, dateFin string,  parents[nom,prenom], visiteurs[nom,prenom], visiteARealiser:integer]
loop coordonnateur n'a pas termine
C -> S: ajouterHoraire(employe:integer,local:integer, dateDebut:string, dateFin:string, visiteARealiser )
C <<-- S: confirmation
end

C -> S: confirmerHoraires()
C <<-- S: courriel envoyé aux employés

@enduml


